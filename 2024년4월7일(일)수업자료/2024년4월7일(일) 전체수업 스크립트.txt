IP:               10.46.0.1
IPs:
  IP:           10.46.0.1
Controlled By:  DaemonSet/daemonset-nginx
Containers:
  nginx-container:
    Container ID:   containerd://4714394124ac296062faa3aa9660f75e483c9b0b22b3b9635acd87cfa14c8d11
    Image:          nginx:1.14
    Image ID:       docker.io/library/nginx@sha256:f7988fb6c02e0ce69257d9bd9cf37ae20a60f1df7563c3a2a6abe24160306b8d
    Port:           <none>
    Host Port:      <none>
    State:          Running
      Started:      Sun, 07 Apr 2024 15:56:02 +0900
    Ready:          True
    Restart Count:  0
    Environment:    <none>
    Mounts:
      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-t2kjq (ro)
Conditions:
  Type              Status
  Initialized       True 
  Ready             True 
  ContainersReady   True 
  PodScheduled      True 
Volumes:
  kube-api-access-t2kjq:
    Type:                    Projected (a volume that contains injected data from multiple sources)
    TokenExpirationSeconds:  3607
    ConfigMapName:           kube-root-ca.crt
    ConfigMapOptional:       <nil>
    DownwardAPI:             true
QoS Class:                   BestEffort
Node-Selectors:              <none>
Tolerations:                 node.kubernetes.io/disk-pressure:NoSchedule op=Exists
                             node.kubernetes.io/memory-pressure:NoSchedule op=Exists
                             node.kubernetes.io/not-ready:NoExecute op=Exists
                             node.kubernetes.io/pid-pressure:NoSchedule op=Exists
                             node.kubernetes.io/unreachable:NoExecute op=Exists
                             node.kubernetes.io/unschedulable:NoSchedule op=Exists
Events:
  Type    Reason     Age   From               Message
  ----    ------     ----  ----               -------
  Normal  Scheduled  49s   default-scheduler  Successfully assigned default/daemonset-nginx-hdqrs to k8s-worker2
  Normal  Pulled     49s   kubelet            Container image "nginx:1.14" already present on machine
  Normal  Created    49s   kubelet            Created container nginx-container
  Normal  Started    49s   kubelet            Started container nginx-container
root@k8s-master:~/k8slab/6# clear
root@k8s-master:~/k8slab/6# kubectl edit ds daemonset-nginx 
daemonset.apps/daemonset-nginx edited
root@k8s-master:~/k8slab/6# kubectl describe pods daemonset-nginx-xpvv8
Name:             daemonset-nginx-xpvv8
Namespace:        default
Priority:         0
Service Account:  default
Node:             k8s-worker2/10.100.0.107
Start Time:       Sun, 07 Apr 2024 15:58:09 +0900
Labels:           app=webui
                  controller-revision-hash=6b65798c7d
                  pod-template-generation=2
Annotations:      <none>
Status:           Running
IP:               10.46.0.1
IPs:
  IP:           10.46.0.1
Controlled By:  DaemonSet/daemonset-nginx
Containers:
  nginx-container:
    Container ID:   containerd://cdf530a80f67c49414bf8f39195de813a7c70072e0281d9af22be96365e3a9e4
    Image:          nginx:1.15
    Image ID:       docker.io/library/nginx@sha256:23b4dcdf0d34d4a129755fc6f52e1c6e23bb34ea011b315d87e193033bcd1b68
    Port:           <none>
    Host Port:      <none>
    State:          Running
      Started:      Sun, 07 Apr 2024 15:58:10 +0900
    Ready:          True
    Restart Count:  0
    Environment:    <none>
    Mounts:
      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-64xnf (ro)
Conditions:
  Type              Status
  Initialized       True 
  Ready             True 
  ContainersReady   True 
  PodScheduled      True 
Volumes:
  kube-api-access-64xnf:
    Type:                    Projected (a volume that contains injected data from multiple sources)
    TokenExpirationSeconds:  3607
    ConfigMapName:           kube-root-ca.crt
    ConfigMapOptional:       <nil>
    DownwardAPI:             true
QoS Class:                   BestEffort
Node-Selectors:              <none>
Tolerations:                 node.kubernetes.io/disk-pressure:NoSchedule op=Exists
                             node.kubernetes.io/memory-pressure:NoSchedule op=Exists
                             node.kubernetes.io/not-ready:NoExecute op=Exists
                             node.kubernetes.io/pid-pressure:NoSchedule op=Exists
                             node.kubernetes.io/unreachable:NoExecute op=Exists
                             node.kubernetes.io/unschedulable:NoSchedule op=Exists
Events:
  Type    Reason     Age   From               Message
  ----    ------     ----  ----               -------
  Normal  Scheduled  19s   default-scheduler  Successfully assigned default/daemonset-nginx-xpvv8 to k8s-worker2
  Normal  Pulled     18s   kubelet            Container image "nginx:1.15" already present on machine
  Normal  Created    18s   kubelet            Created container nginx-container
  Normal  Started    18s   kubelet            Started container nginx-container
root@k8s-master:~/k8slab/6# clear
root@k8s-master:~/k8slab/6# kubectl set image ds daemonset-nginx nginx-container
Error from server (NotFound): daemonsets.apps "nginx-container" not found
root@k8s-master:~/k8slab/6# kubectl set image ds daemonset-nginx nginx-container=nginx:1.16
daemonset.apps/daemonset-nginx image updated
root@k8s-master:~/k8slab/6# kubectl describe pods daemonset-nginx-wxvs2
Name:             daemonset-nginx-wxvs2
Namespace:        default
Priority:         0
Service Account:  default
Node:             k8s-worker2/10.100.0.107
Start Time:       Sun, 07 Apr 2024 15:59:50 +0900
Labels:           app=webui
                  controller-revision-hash=97888dcf7
                  pod-template-generation=3
Annotations:      <none>
Status:           Running
IP:               10.46.0.1
IPs:
  IP:           10.46.0.1
Controlled By:  DaemonSet/daemonset-nginx
Containers:
  nginx-container:
    Container ID:   containerd://2bc50f366be20caf62ce5470cf34f50fc207b9fcc90dc540d14abd031a6603bb
    Image:          nginx:1.16
    Image ID:       docker.io/library/nginx@sha256:d20aa6d1cae56fd17cd458f4807e0de462caf2336f0b70b5eeb69fcaaf30dd9c
    Port:           <none>
    Host Port:      <none>
    State:          Running
      Started:      Sun, 07 Apr 2024 15:59:51 +0900
    Ready:          True
    Restart Count:  0
    Environment:    <none>
    Mounts:
      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-6kg9x (ro)
Conditions:
  Type              Status
  Initialized       True 
  Ready             True 
  ContainersReady   True 
  PodScheduled      True 
Volumes:
  kube-api-access-6kg9x:
    Type:                    Projected (a volume that contains injected data from multiple sources)
    TokenExpirationSeconds:  3607
    ConfigMapName:           kube-root-ca.crt
    ConfigMapOptional:       <nil>
    DownwardAPI:             true
QoS Class:                   BestEffort
Node-Selectors:              <none>
Tolerations:                 node.kubernetes.io/disk-pressure:NoSchedule op=Exists
                             node.kubernetes.io/memory-pressure:NoSchedule op=Exists
                             node.kubernetes.io/not-ready:NoExecute op=Exists
                             node.kubernetes.io/pid-pressure:NoSchedule op=Exists
                             node.kubernetes.io/unreachable:NoExecute op=Exists
                             node.kubernetes.io/unschedulable:NoSchedule op=Exists
Events:
  Type    Reason     Age   From               Message
  ----    ------     ----  ----               -------
  Normal  Scheduled  18s   default-scheduler  Successfully assigned default/daemonset-nginx-wxvs2 to k8s-worker2
  Normal  Pulled     18s   kubelet            Container image "nginx:1.16" already present on machine
  Normal  Created    18s   kubelet            Created container nginx-container
  Normal  Started    18s   kubelet            Started container nginx-container
root@k8s-master:~/k8slab/6# clear
root@k8s-master:~/k8slab/6# kubectl rollout history ds daemonset-nginx 
daemonset.apps/daemonset-nginx 
REVISION  CHANGE-CAUSE
1         <none>
2         <none>
3         <none>

root@k8s-master:~/k8slab/6# kubectl rollout undo ds daemonset-nginx 
daemonset.apps/daemonset-nginx rolled back
root@k8s-master:~/k8slab/6# kubectl describe pods daemonset-nginx-hrx2h  
Name:             daemonset-nginx-hrx2h
Namespace:        default
Priority:         0
Service Account:  default
Node:             k8s-worker1/10.100.0.106
Start Time:       Sun, 07 Apr 2024 16:01:31 +0900
Labels:           app=webui
                  controller-revision-hash=6b65798c7d
                  pod-template-generation=4
Annotations:      <none>
Status:           Running
IP:               10.32.0.2
IPs:
  IP:           10.32.0.2
Controlled By:  DaemonSet/daemonset-nginx
Containers:
  nginx-container:
    Container ID:   containerd://3bc9c736366e4db3a971ca26448790e5f8ef00f55d6dd4f726daff4aa2a4c6e3
    Image:          nginx:1.15
    Image ID:       docker.io/library/nginx@sha256:23b4dcdf0d34d4a129755fc6f52e1c6e23bb34ea011b315d87e193033bcd1b68
    Port:           <none>
    Host Port:      <none>
    State:          Running
      Started:      Sun, 07 Apr 2024 16:01:32 +0900
    Ready:          True
    Restart Count:  0
    Environment:    <none>
    Mounts:
      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-z4l7j (ro)
Conditions:
  Type              Status
  Initialized       True 
  Ready             True 
  ContainersReady   True 
  PodScheduled      True 
Volumes:
  kube-api-access-z4l7j:
    Type:                    Projected (a volume that contains injected data from multiple sources)
    TokenExpirationSeconds:  3607
    ConfigMapName:           kube-root-ca.crt
    ConfigMapOptional:       <nil>
    DownwardAPI:             true
QoS Class:                   BestEffort
Node-Selectors:              <none>
Tolerations:                 node.kubernetes.io/disk-pressure:NoSchedule op=Exists
                             node.kubernetes.io/memory-pressure:NoSchedule op=Exists
                             node.kubernetes.io/not-ready:NoExecute op=Exists
                             node.kubernetes.io/pid-pressure:NoSchedule op=Exists
                             node.kubernetes.io/unreachable:NoExecute op=Exists
                             node.kubernetes.io/unschedulable:NoSchedule op=Exists
Events:
  Type    Reason     Age   From               Message
  ----    ------     ----  ----               -------
  Normal  Scheduled  16s   default-scheduler  Successfully assigned default/daemonset-nginx-hrx2h to k8s-worker1
  Normal  Pulled     17s   kubelet            Container image "nginx:1.15" already present on machine
  Normal  Created    17s   kubelet            Created container nginx-container
  Normal  Started    16s   kubelet            Started container nginx-container
root@k8s-master:~/k8slab/6# kubectl delete -f daemonset-exam.yaml 
daemonset.apps "daemonset-nginx" deleted
root@k8s-master:~/k8slab/6# clear
root@k8s-master:~/k8slab/6# kubectl apply -f statefulset-exam.yaml --record
Flag --record has been deprecated, --record will be removed in the future
statefulset.apps/sf-nginx created
root@k8s-master:~/k8slab/6# kubectl delete pods sf-nginx-1
pod "sf-nginx-1" deleted
root@k8s-master:~/k8slab/6# kubectl delete pods sf-nginx-2
pod "sf-nginx-2" deleted
root@k8s-master:~/k8slab/6# kubectl scale sts sf-nginx --replicas=5
statefulset.apps/sf-nginx scaled
root@k8s-master:~/k8slab/6# kubectl delete pods sf-nginx-3
pod "sf-nginx-3" deleted
root@k8s-master:~/k8slab/6# kubectl scale sts sf-nginx --replicas=3
statefulset.apps/sf-nginx scaled
root@k8s-master:~/k8slab/6# kubectl describe pods sf-nginx-2
Name:             sf-nginx-2
Namespace:        default
Priority:         0
Service Account:  default
Node:             k8s-worker1/10.100.0.106
Start Time:       Sun, 07 Apr 2024 16:15:33 +0900
Labels:           app=webui
                  apps.kubernetes.io/pod-index=2
                  controller-revision-hash=sf-nginx-66f56bb7cb
                  statefulset.kubernetes.io/pod-name=sf-nginx-2
Annotations:      <none>
Status:           Running
IP:               10.32.0.2
IPs:
  IP:           10.32.0.2
Controlled By:  StatefulSet/sf-nginx
Containers:
  nginx-container:
    Container ID:   containerd://479ef550353e752eb04e04057301bd90d13f2ba46b46b1957bc5630871128c91
    Image:          nginx:1.14
    Image ID:       docker.io/library/nginx@sha256:f7988fb6c02e0ce69257d9bd9cf37ae20a60f1df7563c3a2a6abe24160306b8d
    Port:           <none>
    Host Port:      <none>
    State:          Running
      Started:      Sun, 07 Apr 2024 16:15:34 +0900
    Ready:          True
    Restart Count:  0
    Environment:    <none>
    Mounts:
      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-dn49h (ro)
Conditions:
  Type              Status
  Initialized       True 
  Ready             True 
  ContainersReady   True 
  PodScheduled      True 
Volumes:
  kube-api-access-dn49h:
    Type:                    Projected (a volume that contains injected data from multiple sources)
    TokenExpirationSeconds:  3607
    ConfigMapName:           kube-root-ca.crt
    ConfigMapOptional:       <nil>
    DownwardAPI:             true
QoS Class:                   BestEffort
Node-Selectors:              <none>
Tolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s
                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s
Events:
  Type    Reason     Age   From               Message
  ----    ------     ----  ----               -------
  Normal  Scheduled  3m2s  default-scheduler  Successfully assigned default/sf-nginx-2 to k8s-worker1
  Normal  Pulled     3m3s  kubelet            Container image "nginx:1.14" already present on machine
  Normal  Created    3m3s  kubelet            Created container nginx-container
  Normal  Started    3m2s  kubelet            Started container nginx-container
root@k8s-master:~/k8slab/6# kubectl edit sts sf-nginx 
Edit cancelled, no changes made.
root@k8s-master:~/k8slab/6# kubectl edit sts sf-nginx 
statefulset.apps/sf-nginx edited
root@k8s-master:~/k8slab/6# kubectl describe pods sf-nginx-1  
Name:             sf-nginx-1
Namespace:        default
Priority:         0
Service Account:  default
Node:             k8s-worker1/10.100.0.106
Start Time:       Sun, 07 Apr 2024 16:20:05 +0900
Labels:           app=webui
                  apps.kubernetes.io/pod-index=1
                  controller-revision-hash=sf-nginx-7c9755b47
                  statefulset.kubernetes.io/pod-name=sf-nginx-1
Annotations:      <none>
Status:           Running
IP:               10.32.0.2
IPs:
  IP:           10.32.0.2
Controlled By:  StatefulSet/sf-nginx
Containers:
  nginx-container:
    Container ID:   containerd://1374ab8be61eaa4189644e2dbfc4d828f383078d537f7694d1574d667eb5c3d3
    Image:          nginx:1.15
    Image ID:       docker.io/library/nginx@sha256:23b4dcdf0d34d4a129755fc6f52e1c6e23bb34ea011b315d87e193033bcd1b68
    Port:           <none>
    Host Port:      <none>
    State:          Running
      Started:      Sun, 07 Apr 2024 16:20:06 +0900
    Ready:          True
    Restart Count:  0
    Environment:    <none>
    Mounts:
      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-z7xvd (ro)
Conditions:
  Type              Status
  Initialized       True 
  Ready             True 
  ContainersReady   True 
  PodScheduled      True 
Volumes:
  kube-api-access-z7xvd:
    Type:                    Projected (a volume that contains injected data from multiple sources)
    TokenExpirationSeconds:  3607
    ConfigMapName:           kube-root-ca.crt
    ConfigMapOptional:       <nil>
    DownwardAPI:             true
QoS Class:                   BestEffort
Node-Selectors:              <none>
Tolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s
                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s
Events:
  Type    Reason     Age   From               Message
  ----    ------     ----  ----               -------
  Normal  Scheduled  22s   default-scheduler  Successfully assigned default/sf-nginx-1 to k8s-worker1
  Normal  Pulled     21s   kubelet            Container image "nginx:1.15" already present on machine
  Normal  Created    21s   kubelet            Created container nginx-container
  Normal  Started    21s   kubelet            Started container nginx-container
root@k8s-master:~/k8slab/6# clear
root@k8s-master:~/k8slab/6# kubectl set image sts sf-nginx nginx-pod
Error from server (NotFound): statefulsets.apps "nginx-pod" not found
root@k8s-master:~/k8slab/6# kubectl set image sts sf-nginx nginx-pod=nginx:1.15 --record
Flag --record has been deprecated, --record will be removed in the future
statefulset.apps/sf-nginx image updated
error: unable to find container named "nginx-pod"
root@k8s-master:~/k8slab/6# kubectl set image sts sf-nginx nginx-container=nginx:1.15 --record
Flag --record has been deprecated, --record will be removed in the future
statefulset.apps/sf-nginx image updated
root@k8s-master:~/k8slab/6# kubectl set image sts sf-nginx nginx-container=nginx:1.15 --record
Flag --record has been deprecated, --record will be removed in the future
root@k8s-master:~/k8slab/6# kubectl set image sts sf-nginx nginx-container=nginx:1.15 
root@k8s-master:~/k8slab/6# kubectl set image sts sf-nginx nginx-container=nginx:1.16 --record
Flag --record has been deprecated, --record will be removed in the future
statefulset.apps/sf-nginx image updated
root@k8s-master:~/k8slab/6# kubectl rollout history sts sf-nginx 
statefulset.apps/sf-nginx 
REVISION  CHANGE-CAUSE
1         kubectl apply --filename=statefulset-exam.yaml --record=true
2         kubectl apply --filename=statefulset-exam.yaml --record=true
3         kubectl set image sts sf-nginx nginx-container=nginx:1.16 --record=true

root@k8s-master:~/k8slab/6# kubectl set image sts sf-nginx nginx-container=nginx:1.17 --record
Flag --record has been deprecated, --record will be removed in the future
statefulset.apps/sf-nginx image updated
root@k8s-master:~/k8slab/6# kubectl rollout history sts sf-nginx 
statefulset.apps/sf-nginx 
REVISION  CHANGE-CAUSE
1         kubectl apply --filename=statefulset-exam.yaml --record=true
2         kubectl apply --filename=statefulset-exam.yaml --record=true
3         kubectl set image sts sf-nginx nginx-container=nginx:1.16 --record=true
4         kubectl set image sts sf-nginx nginx-container=nginx:1.17 --record=true

root@k8s-master:~/k8slab/6# kubectl rollout undo sts sf-nginx 
statefulset.apps/sf-nginx rolled back
root@k8s-master:~/k8slab/6# kubectl rollout history sts sf-nginx 
statefulset.apps/sf-nginx 
REVISION  CHANGE-CAUSE
1         kubectl apply --filename=statefulset-exam.yaml --record=true
2         kubectl apply --filename=statefulset-exam.yaml --record=true
4         kubectl set image sts sf-nginx nginx-container=nginx:1.17 --record=true
5         kubectl set image sts sf-nginx nginx-container=nginx:1.16 --record=true

root@k8s-master:~/k8slab/6# kubectl scale sts sf-nginx --replicas=6
statefulset.apps/sf-nginx scaled
root@k8s-master:~/k8slab/6# kubectl delete pods sf-nginx-4
pod "sf-nginx-4" deleted
root@k8s-master:~/k8slab/6# clear
root@k8s-master:~/k8slab/6# kubectl delete --all all
pod "sf-nginx-0" deleted
pod "sf-nginx-1" deleted
pod "sf-nginx-2" deleted
pod "sf-nginx-3" deleted
pod "sf-nginx-4" deleted
pod "sf-nginx-5" deleted
service "kubernetes" deleted
statefulset.apps "sf-nginx" deleted
root@k8s-master:~/k8slab/6# clear
root@k8s-master:~/k8slab/6# kubectl create deployment webserver --image=nginx:1.14 --replicas=2
deployment.apps/webserver created
root@k8s-master:~/k8slab/6# kubectl get deployments.apps webserver -o yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  creationTimestamp: "2024-04-07T07:41:05Z"
  generation: 1
  labels:
    app: webserver
  name: webserver
  namespace: default
  resourceVersion: "116577"
  uid: ff1dc1e6-20ff-4bac-a512-02d1614a8084
spec:
  progressDeadlineSeconds: 600
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: webserver
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: webserver
    spec:
      containers:
      - image: nginx:1.14
        imagePullPolicy: IfNotPresent
        name: nginx
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status:
  availableReplicas: 2
  conditions:
  - lastTransitionTime: "2024-04-07T07:41:07Z"
    lastUpdateTime: "2024-04-07T07:41:07Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  - lastTransitionTime: "2024-04-07T07:41:05Z"
    lastUpdateTime: "2024-04-07T07:41:07Z"
    message: ReplicaSet "webserver-66b7776cd6" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  observedGeneration: 1
  readyReplicas: 2
  replicas: 2
  updatedReplicas: 2
root@k8s-master:~/k8slab/6# kubectl get deployments.apps webserver -o yaml > webserver-deploy.yaml
root@k8s-master:~/k8slab/6# vi webserver-deploy.yaml 
root@k8s-master:~/k8slab/6# kubectl apply -f webserver-deploy.yaml 
Warning: resource deployments/webserver is missing the kubectl.kubernetes.io/last-applied-configuration annotation which is required by kubectl apply. kubectl apply should only be used on resources created declaratively by either kubectl create --save-config or kubectl apply. The missing annotation will be patched automatically.
The Deployment "webserver" is invalid: spec.selector: Invalid value: v1.LabelSelector{MatchLabels:map[string]string{"app":"webserver", "app_env_stage":"dev"}, MatchExpressions:[]v1.LabelSelectorRequirement(nil)}: field is immutable
root@k8s-master:~/k8slab/6# kubectl delete deployments.apps webserver 
deployment.apps "webserver" deleted
root@k8s-master:~/k8slab/6# kubectl apply -f webserver-deploy.yaml 
deployment.apps/webserver created
root@k8s-master:~/k8slab/6# kubectl get deployments.apps webserver --show-labels
NAME        READY   UP-TO-DATE   AVAILABLE   AGE   LABELS
webserver   2/2     2            2           22s   app_env_stage=dev
root@k8s-master:~/k8slab/6# kubectl scale deployment webserver --replicas=3
deployment.apps/webserver scaled
root@k8s-master:~/k8slab/6# clear
root@k8s-master:~/k8slab/6# kubectl get deployments.apps webserver -o yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"deployment.kubernetes.io/revision":"1"},"creationTimestamp":"2024-04-07T07:41:05Z","generation":1,"labels":{"app_env_stage":"dev"},"name":"webserver","namespace":"default","resourceVersion":"116577","uid":"ff1dc1e6-20ff-4bac-a512-02d1614a8084"},"spec":{"progressDeadlineSeconds":600,"replicas":2,"revisionHistoryLimit":10,"selector":{"matchLabels":{"app_env_stage":"dev"}},"strategy":{"rollingUpdate":{"maxSurge":"25%","maxUnavailable":"25%"},"type":"RollingUpdate"},"template":{"metadata":{"creationTimestamp":null,"labels":{"app_env_stage":"dev"}},"spec":{"containers":[{"image":"nginx:1.14","imagePullPolicy":"IfNotPresent","name":"nginx","resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File"}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","schedulerName":"default-scheduler","securityContext":{},"terminationGracePeriodSeconds":30}}},"status":{"availableReplicas":2,"conditions":[{"lastTransitionTime":"2024-04-07T07:41:07Z","lastUpdateTime":"2024-04-07T07:41:07Z","message":"Deployment has minimum availability.","reason":"MinimumReplicasAvailable","status":"True","type":"Available"},{"lastTransitionTime":"2024-04-07T07:41:05Z","lastUpdateTime":"2024-04-07T07:41:07Z","message":"ReplicaSet \"webserver-66b7776cd6\" has successfully progressed.","reason":"NewReplicaSetAvailable","status":"True","type":"Progressing"}],"observedGeneration":1,"readyReplicas":2,"replicas":2,"updatedReplicas":2}}
  creationTimestamp: "2024-04-07T07:45:29Z"
  generation: 2
  labels:
    app_env_stage: dev
  name: webserver
  namespace: default
  resourceVersion: "117182"
  uid: 0b0cafe2-1ee5-4dc8-befb-45cbdde9e3e4
spec:
  progressDeadlineSeconds: 600
  replicas: 3
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app_env_stage: dev
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app_env_stage: dev
    spec:
      containers:
      - image: nginx:1.14
        imagePullPolicy: IfNotPresent
        name: nginx
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status:
  availableReplicas: 3
  conditions:
  - lastTransitionTime: "2024-04-07T07:45:29Z"
    lastUpdateTime: "2024-04-07T07:45:31Z"
    message: ReplicaSet "webserver-6d4c4d9b69" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  - lastTransitionTime: "2024-04-07T07:47:09Z"
    lastUpdateTime: "2024-04-07T07:47:09Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  observedGeneration: 2
  readyReplicas: 3
  replicas: 3
  updatedReplicas: 3
root@k8s-master:~/k8slab/6# kubectl set image deploy webserver nginx=nginx:1.15
deployment.apps/webserver image updated
root@k8s-master:~/k8slab/6# kubectl describe pods webserver-7469bd65f6-4jp9x 
Name:             webserver-7469bd65f6-4jp9x
Namespace:        default
Priority:         0
Service Account:  default
Node:             k8s-worker2/10.100.0.107
Start Time:       Sun, 07 Apr 2024 16:48:37 +0900
Labels:           app_env_stage=dev
                  pod-template-hash=7469bd65f6
Annotations:      <none>
Status:           Running
IP:               10.46.0.2
IPs:
  IP:           10.46.0.2
Controlled By:  ReplicaSet/webserver-7469bd65f6
Containers:
  nginx:
    Container ID:   containerd://4e5b5759adce05302ec474d253c7a899812d51d35cfb1988fdc50cb72fd3a6b0
    Image:          nginx:1.15
    Image ID:       docker.io/library/nginx@sha256:23b4dcdf0d34d4a129755fc6f52e1c6e23bb34ea011b315d87e193033bcd1b68
    Port:           <none>
    Host Port:      <none>
    State:          Running
      Started:      Sun, 07 Apr 2024 16:48:37 +0900
    Ready:          True
    Restart Count:  0
    Environment:    <none>
    Mounts:
      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-58xf2 (ro)
Conditions:
  Type              Status
  Initialized       True 
  Ready             True 
  ContainersReady   True 
  PodScheduled      True 
Volumes:
  kube-api-access-58xf2:
    Type:                    Projected (a volume that contains injected data from multiple sources)
    TokenExpirationSeconds:  3607
    ConfigMapName:           kube-root-ca.crt
    ConfigMapOptional:       <nil>
    DownwardAPI:             true
QoS Class:                   BestEffort
Node-Selectors:              <none>
Tolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s
                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s
Events:
  Type    Reason     Age   From               Message
  ----    ------     ----  ----               -------
  Normal  Scheduled  18s   default-scheduler  Successfully assigned default/webserver-7469bd65f6-4jp9x to k8s-worker2
  Normal  Pulled     18s   kubelet            Container image "nginx:1.15" already present on machine
  Normal  Created    18s   kubelet            Created container nginx
  Normal  Started    18s   kubelet            Started container nginx
root@k8s-master:~/k8slab/6# history
    1  vim /etc/hostname
    2  vi /etc/hostname
    3  apt-get update
    4  apt-get install -y openssh-server curl tree
    5  reboot
    6  vi /etc/hostname
    7  apt-get install -y vim
    8  vi /etc/hostname
    9  hostname
   10  vim /etc/hosts
   11  reboot
   12  clear
   13  ping 8.8.8.8
   14  ifconfig
   15  apt install net-tools
   16  ifconfig
   17  clear
   18  hostname
   19  vi /etc/hostname
   20  vi /etc/hosts
   21  hostname
   22  reboot
   23  clear
   24  hostname
   25  ifconfig
   26  ping 8.8.8.8
   27  clear
   28  cat /etc/hosts
   29  hostname
   30  ifconfig
   31  cat /etc/hosts
   32  clear
   33  hostname
   34  cat /etc/hosts
   35  cat /etc/hostname
   36  clear
   37  sudo apt-get update
   38  sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common
   39  curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
   40  add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
   41  grep docker /etc/apt/sources.list
   42  apt-get update
   43  apt-get install -y docker-ce
   44  systemctl status docker
   45  docker version
   46  clear
   47  exit
   48  kubectl get nodes
   49  kubectl get pods -A
   50  kubectl get pods --all-namespaces 
   51  clear
   52  kubectl get nodes -o wide
   53  clear
   54  kubectl describe nodes k8s-worker1
   55  clear
   56  kubectl api-resources 
   57  clear
   58  docker run -d --name web nginx
   59  docker ps
   60  docker iamges
   61  docker images
   62  docker inspect web
   63  curl 172.17.0.2
   64  clear
   65  docker ps
   66  docker exec -it web /bin/bash
   67  docker ps
   68  kubectl run webserver --image=nginx:1.14 --port=80
   69  kubectl get pods -o wide
   70  curl 10.32.0.2
   71  clear
   72  kubectl delete pods webserver
   73  kubectl get pods -o wide
   74  docker ps
   75  docker rm stop cb5
   76  docker stop cb5
   77  docker rm cb5
   78  docker ps
   79  kubectl get pods
   80  kubectl get pods --all-namespaces 
   81  clear
   82  kubectl get pods -o wide
   83  kubectl get pods 
   84  kubectl get pods namespace default
   85  kubectl get pods -n  default
   86  kubectl get pods 
   87  kubectl create namespace dev
   88  kubectl create namespace stg
   89  kubectl create namespace prd
   90  kubectl get namespaces 
   91  clear
   92  kubectl run webserver --image=nginx:1.14 --port=80
   93  kubectl get pods
   94  kubectl get pods -o wide
   95  kubectl create deploy webserver1 --image=nginx:1.14
   96  kubectl get pods -o wide
   97  clear
   98  kubectl get pods -o wide
   99  kubectl delete pods webserver
  100  kubectl get pods -o wide
  101  kubectl delete pods webserver1-b4c58855f-gqtl4 
  102  clear
  103  kubectl scale deployment webserver1 --replicas=3
  104  kubectl delete pods webserver1-b4c58855f-znrrd
  105  kubectl run webserver2 --images=nginx:1.14 --dry-run=client
  106  kubectl run webserver2 --image=nginx:1.14 --dry-run=client
  107  kubectl run webserver2 --image=nginx:1.14 --dry-run=client -o yaml
  108  kubectl run webserver2 --image=nginx:1.14 --dry-run=client -o yaml > webserver2.yaml
  109  clear
  110  l;s
  111  ls
  112  vi webserver2.yaml 
  113  ls
  114  kubectl apply -f webserver2.yaml 
  115  kubectl run webserver3 --image=nginx --labels=app=webui --dry-run=clinet
  116  kubectl run webserver3 --image=nginx --labels=app=webui --dry-run=client
  117  kubectl run webserver3 --image=nginx --labels=app=webui --dry-run=client -o yaml > weberver3.yaml
  118  ls
  119  vi webserver3.yaml
  120  vi weberver3.yaml
  121  kubectl apply -f weberver3.yaml 
  122  kubectl get pods --show-labels
  123  clear
  124  kubectl get deploy,rs,pods
  125  ls
  126  exit
  127  clear
  128  kuectl get rc,pods
  129  kubectl get rc,pods
  130  kubectl get rc rc-nginx --show-labels
  131  clear
  132  cd k8slab/
  133  cd6
  134  cd 6
  135  ls
  136  kubectl apply -f rs-nginx.yaml 
  137  kubectl delete pods rs-nginx-wtb76 
  138  kubectl get rs,pods
  139  kubectl scale rs  rs-nginx --replicas=2
  140  kubectl edit replicaset rs-nginx 
  141  kubectl edit rs rs-nginx 
  142  kubectl delete pods rs-nginx-pgh4n 
  143  kubectl describe pods rs-nginx-ngj45
  144  kubectl delete rs rs-nginx --cascade=false
  145  clear 
  146  kubectl get rs,pods
  147  kubectl delete pods pod/rs-nginx-rjkzk  
  148  kubectl delete pods rs-nginx-rjkzk  
  149  ]ls
  150  clear
  151  ls
  152  kubectl apply -f rc-nginx.yaml 
  153  kubectl get rc-nginx --show-labels
  154  kubectl get rs-nginx --show-labels
  155  kubectl get rc-nginx --show-labels
  156  kubectl get rc rc-nginx --show-labels
  157  clear
  158  watch kubectl get pods -o wide
  159  ls
  160  cd k8slab/
  161  ls
  162  cd 5
  163  ls
  164  clear
  165  ls
  166  vi pod-multi.yaml 
  167  kubectl get pods --all-namespaces 
  168  clear
  169  ls
  170  vi pod-multi.yaml 
  171  vi pod-nginx.yaml 
  172  vi pod-multi.yaml 
  173  kubectl describe nodes k8s-worker1
  174  clear
  175  cd ..
  176  cd 6
  177  ls
  178  vi deploy-nginx.yaml 
  179  kubeclt delete --all
  180  kubectl delete pods all--all
  181  kubectl delete pods --all all
  182  kubectl delete --all
  183  kubectl delete all
  184  kubectl delete --all all
  185  clear
  186  ls
  187  vi rc-nginx.yaml 
  188  kubectl apply -f rc-nginx.yaml 
  189  kubectl delete pods rc-nginx-vtrh7  
  190  kubectl scale replicationcontroller rc-nginx --replicas=4
  191  clear
  192  kubectl edit rc rc-nginx
  193  kubectl get rc rc-nginx --show-labels
  194  vi rc-nginx.yaml 
  195  kubectl run redis --image=redis --labels=app-webui
  196  kubectl run redis --image=redis --labels=app=webui
  197  clear
  198  kubectl describe pods rc-nginx-8v6n5 
  199  clear
  200  kubectl edit rc rc-nginx 
  201  kubectl describe pods rc-nginx-8v6n5 
  202  kubectl delete pods rc-nginx-n7t29  
  203  kubectl describe pods rc-nginx-9ngt
  204  kubectl delete pods rc-nginx-8v6n5 
  205  kubectl describe pods rc-nginx-8mltj 
  206  clear
  207  kubectl get rc,pods
  208  kubectl delete rc rc-nginx
  209  clear
  210  ls
  211  vi rs-nginx.yaml 
  212  clear
  213  ls
  214  vi rs-nginx.yaml 
  215  doccker login
  216  docker login
  217  vi rs-nginx.yaml 
  218  vi rc-nginx.yaml 
  219  kubectl get nodes
  220  kubectl delete --all all
  221  clear
  222  kubectl get pods --all-namespaces 
  223  kubectl run webserver --image=nginx:1.14
  224  curl 10.32.0.2
  225  clear
  226  kubectl get pods 
  227  kubectl get pods webserver -o yaml 
  228  kubectl get pods webserver -o yaml > webserver.yaml
  229  clear
  230  ls
  231  vi webserver.yaml 
  232  kubectl apply -f webserver.yaml 
  233  ls
  234  exi
  235  exit
  236  clear
  237  cd k8slab/
  238  cd 6
  239  l;s
  240  ls
  241  clear
  242  cat rc-nginx.yaml 
  243  kubectl delete pods rc-nginx-kgsmq 
  244  kubectl describe pods rc-nginx-kgsmq 
  245  kubectl describe pods rc-nginx-8cr5m 
  246  kubectl apply -f rc-nginx.yaml 
  247  kubectl describe pods rc-nginx-8hpsb 
  248  kubectl delete pods rc-nginx-8hpsb 
  249  kubectl describe pods rc-nginx-9rkx2 
  250  kubectl describe pods rc-nginx-8cr5m  
  251  kubectl describe pods rc-nginx-2ks6r 
  252  clear
  253  kubectl delete pods rc-nginx-8cr5m 
  254  kubectl describe pods rc-nginx-q589k 
  255  clear
  256  docker login
  257  docker logout
  258  docker login
  259  kubectl get pods -A
  260  clear
  261  kubectl delete -f rc-nginx.yaml 
  262  kubectl run webserver --image=nginx
  263  kubectl create deployment webserver2 --image=nginx 
  264  kubectl create deployment webserver3 --image=powermvp/marvel-colletcion --port=80
  265  kubectl create deployment webserver3 --image=powermvp/marvel-collection --port=80
  266  kubectl create deployment webserver4 --image=powermvp/marvel-collection --port=80
  267  curl 10.46.0.2
  268  clear
  269  kubectl scale deployment webserver4 --replicas=3
  270  kubectl delete pods webserver4-98d98f6c4-p7wlr 
  271  kubectl delete pods webserver     
  272  kubectl delete --all all
  273  clea
  274  clear
  275  ls
  276  kubectl apply -f rs-nginx.yaml 
  277  kubectl get deployments.apps,rs,pods
  278  kubectl get rs,pods
  279  kubectl get pods |grep -i rs
  280  clear
  281  kubectl edit rs rs-nginx 
  282  kubectl scale rs rs-nginx --replicas=2
  283  kubectl edit rs rs-nginx 
  284  kubectl scale rs rs-nginx --replicas=3
  285  kubectl describe pods rs-nginx-nrtf2
  286  kubectl describe pods rs-nginx-d94bc 
  287  clear
  288  kubectl get rs,pods
  289  kubectl delete rs rs-nginx --cascade=false
  290  kubectl get rs,pods
  291  kubectl delete pods rs-nginx-nrtf2 
  292  kubectl apply -f rc-nginx.yaml 
  293  kubectl delete --all all
  294  clear
  295  ls
  296  kubectl apply -f deploy-nginx.yaml 
  297  kubectl get deploy,rs,pods
  298  clear
  299  kubectl delete -f deploy-nginx.yaml 
  300  kubectl apply -f deployment-exam1.yaml 
  301  kubectl describe pods app-deploy-d599fcdf4-tk5dc 
  302  clear
  303  kubectl set image deploy app-deploy web=nginx:1.15
  304  kubectl describe pods app-deploy-d599fcdf4-tk5dc 
  305  kubectl describe pods app-deploy-854cc64799-8zhvd
  306  clear
  307  kubectl get deployments.apps app-deploy -o yaml
  308  clear
  309  kubectl rollout histroy deploy app-deploy
  310  kubectl rollout history deploy app-deploy
  311  kubectl delete -f deployment-exam1.yaml 
  312  kubectl apply -f deployment-exam1.yaml --record
  313  kubectl rollout history deploy app-deploy
  314  kubectl set image deploy app-deploy web=nginx:1.15 --record
  315  kubectl rollout history deploy app-deploy
  316  kubectl set image deploy app-deploy web=nginx:1.16 --record
  317  clear
  318  kubectl set image deploy app-deploy web=nginx:1.17 --record
  319  kubectl rollout status deploy app-deploy 
  320  kubectl set image deploy app-deploy web=nginx:1.18 --record
  321  kubectl rollout pause deploy app-deploy
  322  kubectl rollout resume deploy app-deploy
  323  kubectl rollout history deployment app-deploy 
  324  kubectl rollout undo deployment app-deploy 
  325  kubectl describe pods app-deploy-5cb4fc7fd5-zvht2   
  326  kubectl rollout history deployment app-deploy 
  327  kubectl undo deploy app-deploy --to-revision=3
  328  kubectl rollout undo deploy app-deploy --to-revision=3
  329  kubectl describe pods app-deploy-7579bc79dd-dgsdn
  330  kubectl rollout history deployment app-deploy 
  331  kubectl delete -f deployment-exam1.yaml 
  332  clear
  333  kubectl delete -f deployment-exam1.yaml 
  334  kubectl apply -f deployment-exam1.yaml 
  335  kubectl apply -f deployment-exam2.yaml 
  336  kubectl describe pods deploy-nginx-854cc64799-mnr9v 
  337  kubectl rollout history deployment deploy-nginx 
  338  clear
  339  kubectl delete -f deployment-exam1.yaml 
  340  kubectl delete -f deployment-exam2.yaml 
  341  clear
  342  kubectl get pods -A
  343  kubectl describe node k8s-worker1
  344  clear
  345  kubectl apply -f daemonset-exam.yaml 
  346  kubectl describe node k8s-master|grep noschedule
  347  kubectl describe node k8s-master|grep -i noschedule
  348  kubectl describe node k8s-worker1 |grep -i noschedule
  349  kubectl describe node k8s-worker2 |grep -i noschedule
  350  kubectl delete pods daemonset-nginx-5s8ln 
  351  kubectl describe pods daemonset-nginx-hdqrs
  352  clear
  353  kubectl edit ds daemonset-nginx 
  354  kubectl describe pods daemonset-nginx-xpvv8
  355  clear
  356  kubectl set image ds daemonset-nginx nginx-container
  357  kubectl set image ds daemonset-nginx nginx-container=nginx:1.16
  358  kubectl describe pods daemonset-nginx-wxvs2
  359  clear
  360  kubectl rollout history ds daemonset-nginx 
  361  kubectl rollout undo ds daemonset-nginx 
  362  kubectl describe pods daemonset-nginx-hrx2h  
  363  kubectl delete -f daemonset-exam.yaml 
  364  clear
  365  kubectl apply -f statefulset-exam.yaml --record
  366  kubectl delete pods sf-nginx-1
  367  kubectl delete pods sf-nginx-2
  368  kubectl scale sts sf-nginx --replicas=5
  369  kubectl delete pods sf-nginx-3
  370  kubectl scale sts sf-nginx --replicas=3
  371  kubectl describe pods sf-nginx-2
  372  kubectl edit sts sf-nginx 
  373  kubectl describe pods sf-nginx-1  
  374  clear
  375  kubectl set image sts sf-nginx nginx-pod
  376  kubectl set image sts sf-nginx nginx-pod=nginx:1.15 --record
  377  kubectl set image sts sf-nginx nginx-container=nginx:1.15 --record
  378  kubectl set image sts sf-nginx nginx-container=nginx:1.15 
  379  kubectl set image sts sf-nginx nginx-container=nginx:1.16 --record
  380  kubectl rollout history sts sf-nginx 
  381  kubectl set image sts sf-nginx nginx-container=nginx:1.17 --record
  382  kubectl rollout history sts sf-nginx 
  383  kubectl rollout undo sts sf-nginx 
  384  kubectl rollout history sts sf-nginx 
  385  kubectl scale sts sf-nginx --replicas=6
  386  kubectl delete pods sf-nginx-4
  387  clear
  388  kubectl delete --all all
  389  clear
  390  kubectl create deployment webserver --image=nginx:1.14 --replicas=2
  391  kubectl get deployments.apps webserver -o yaml
  392  kubectl get deployments.apps webserver -o yaml > webserver-deploy.yaml
  393  vi webserver-deploy.yaml 
  394  kubectl apply -f webserver-deploy.yaml 
  395  kubectl delete deployments.apps webserver 
  396  kubectl apply -f webserver-deploy.yaml 
  397  kubectl get deployments.apps webserver --show-labels
  398  kubectl scale deployment webserver --replicas=3
  399  clear
  400  kubectl get deployments.apps webserver -o yaml
  401  kubectl set image deploy webserver nginx=nginx:1.15
  402  kubectl describe pods webserver-7469bd65f6-4jp9x 
  403  history
root@k8s-master:~/k8slab/6# 