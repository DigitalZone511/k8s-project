[실습문제]

1. AWS CLI 를통해서 만든 클러스터에서 아래와 같은 작업을 진행한다.
   0) aws eks --region ap-northeast-2 update-kubeconfig --name powermvp-cluster
   1) kubectl create  deployment webserver --image=nginx:1.14 --port=80  --replicas=5
   2) kubectl expose deployment  webserver --name webserver-svc --port=80 --type=LoadBalancer
   3) 테스트를 해보자 
       1) kubectl get svc 명령어 실행후 나타나는 External-IP DNS 복사해서 브러우저에 실행
           - nginx 홈페이지가 잘 뜨는지 확인 

2. AWS console를통해서 만든 클러스터에서 아래와 같은 작업을 진행한다
   0) aws eks --region ap-northeast-2 update-kubeconfig --name console-cluster
   1) kubectl create  deployment webserver --image=nginx:1.14 --port=80  --replicas=5
   2) kubectl expose deployment  webserver --name web-svc --port=80 --type=LoadBalancer
   3) 테스트를 해보자 
      1) kubectl get svc 명령어 실행후 나타나는 External-IP DNS 복사해서 브러우저에 실행
           - nginx 홈페이지가 잘 뜨는지 확인 

3. 1. AWS CLI를 통해서 만든 클러스터에서 아래와 같은 작업을 진행한다.
   0) aws eks --region ap-northeast-2 update-kubeconfig --name powermvp-cluster
   1) kubectl create  deployment webui --image=ECR URL정보 --port=80  --replicas=5
   2) kubectl expose deployment webui --port=80 --type=LoadBalancer
   3) 테스트를 해보자 
       1) kubectl get svc 명령어 실행후 나타나는 External-IP DNS 복사해서 브러우저에 실행
           - Amazon EKS Connected Success !!! 홈페이지가 잘 뜨는지 확인 

4. AWS console를통해서 만든 클러스터에서 아래와 같은 작업을 진행한다
   0) aws eks --region ap-northeast-2 update-kubeconfig --name console-cluster
   1) kubectl create  deployment webui --image=ECR URL정보  --port=80  --replicas=5
   2) kubectl expose deployment  webui --port=80 --type=LoadBalancer
       왜> webui.yaml  image = ECR
   3) 테스트를 해보자 
      1) kubectl get svc 명령어 실행후 나타나는 External-IP DNS 복사해서 브러우저에 실행
          - Amazon EKS Connected Success !!! 홈페이지가 잘 뜨는지 확인 홈페이지가 잘 뜨는지 확인 